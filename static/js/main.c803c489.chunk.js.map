{"version":3,"sources":["ToDolist.jsx","App.js","reportWebVitals.js","index.js"],"names":["ToDolist","props","className","onClick","onSelect","id","text","App","useState","input","setInput","items","setItems","deleteItems","oldItems","filter","arrElem","index","type","placeholder","value","onChange","event","target","map","itemvalue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAgBeA,EAdA,SAACC,GACZ,OACA,mCACA,sBAAKC,UAAU,aAAf,UACA,mBAAGA,UAAU,cAAc,cAAY,OACpCC,QAAS,WACLF,EAAMG,SAASH,EAAMI,OAE5B,6BAAKJ,EAAMK,aC+CAC,EAtDH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAYMC,EAAc,SAACR,GAEnBO,GAAS,SAACE,GACR,OAAOA,EAASC,QAAO,SAACC,EAASC,GAC/B,OAAOA,IAAUZ,SAKvB,OACE,mCACE,qBAAKH,UAAU,WAAf,SACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBACA,2CACA,uBACA,uBAAOgB,KAAK,OACVC,YAAY,YACZC,MAAOX,EACPY,SA/BO,SAACC,GAElBZ,EAASY,EAAMC,OAAOH,UA+Bd,wBAAQjB,QA5BE,WAClBS,GAAS,SAACE,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAqBL,OAEvBC,EAAS,KAwBD,eAEA,6BAEGC,EAAMa,KAAI,SAACC,EAAWR,GACrB,OAAO,cAAC,EAAD,CACLZ,GAAIY,EACJX,KAAMmB,EACNrB,SAAUS,GAHUI,kBChCvBS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c803c489.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ToDolist=(props)=>{\r\n    return(\r\n    <> \r\n    <div className=\"todo_style\">\r\n    <i className=\"fa fa-times\" aria-hidden=\"true\"\r\n       onClick={()=>{\r\n           props.onSelect(props.id);\r\n       }}/>\r\n    <li>{props.text}</li>\r\n    </div>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default ToDolist;","import React, { useState } from \"react\";\nimport ToDolist from \"./ToDolist\";\n\nconst App = () => {\n  const [input, setInput] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const inputEvent = (event) => {\n    // console.log(event.target.value);\n    setInput(event.target.value);\n  };\n\n  const displayItem = () => {\n    setItems((oldItems) => {\n      return [...oldItems, input];\n    });\n    setInput(\"\");\n  };\n  const deleteItems = (id) => {\n    // console.log(\"i is clicked\");\n    setItems((oldItems) => {\n      return oldItems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });\n  };\n\n  return (\n    <>\n      <div className=\"main_div\">\n        <div className=\"control_div\">\n          <div className=\"center_div\">\n            <br />\n            <h1>ToDo List</h1>\n            <br />\n            <input type=\"text\"\n              placeholder=\"Add Items\"\n              value={input}\n              onChange={inputEvent}\n            />\n            <button onClick={displayItem}>+</button>\n\n            <ol>\n              {/* <li>{input}</li> */}\n              {items.map((itemvalue, index) => {\n                return <ToDolist key={index}\n                  id={index}\n                  text={itemvalue}\n                  onSelect={deleteItems} />\n              })}\n            </ol>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}